name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on:
  push:
    paths:
      - "server/**"
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    env:
      CREDENTIALS_PATH: credentials.json
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Grant execute permission for gradlew
        run: chmod +x ./server/gradlew

      - name: Build Java with Gradle
        working-directory: server
        run: ./gradlew build

      - name: Verify JAR file exists
        working-directory: server
        run: |
          ls build/libs
          if [ ! -f build/libs/*.jar ]; then
            echo "JAR file not found!"
            exit 1
          fi

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/java-server -f server/Dockerfile .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/java-server

        #- run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
        #- run: echo "🖥️ The workflow is now ready to test your code on the runner."
        #- name: List files in the repository
        # run: |
        # ls ${{ github.workspace }}
      # - run: echo "🍏 This job's status is ${{ job.status }}."
      # pushtest
